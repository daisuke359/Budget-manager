{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kawabuchidaisuke/Desktop/expense-tracking-app/client/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  error: null\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/transactions');\n      dispatch({\n        type: 'GETTransaction',\n        data: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TransactionError',\n        data: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete('/transactions/' + id);\n    } catch (error) {}\n\n    dispatch({\n      type: 'delete',\n      data: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'add',\n      data: transaction\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/kawabuchidaisuke/Desktop/expense-tracking-app/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","data","response","deleteTransaction","id","delete","addTransaction","transaction"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC;;AAEA,iBAAeQ,eAAf,GAAiC;AAC7B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAlB;AAGAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,IAAI,EAAEH,GAAG,CAACG,IAAJ,CAASA;AAFV,OAAD,CAAR;AAIH,KARD,CAQE,OAAOV,KAAP,EAAc;AACZK,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,IAAI,EAAEV,KAAK,CAACW,QAAN,CAAeD,IAAf,CAAoBV;AAFrB,OAAD,CAAR;AAIH;AACJ;;AAED,iBAAeY,iBAAf,CAAiCC,EAAjC,EAAqC;AACjC,QAAI;AACA,YAAMhB,KAAK,CAACiB,MAAN,CAAa,mBAAmBD,EAAhC,CAAN;AACH,KAFD,CAEE,OAAOb,KAAP,EAAc,CAEf;;AACDK,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAAI,EAAEG;AAFD,KAAD,CAAR;AAIH;;AAED,WAASE,cAAT,CAAwBC,WAAxB,EAAqC;AACjCX,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,IAAI,EAAEM;AAFD,KAAD,CAAR;AAIH;;AAED,sBAAQ,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACjB,MAAAA,YAAY,EAAEK,KAAK,CAACL,YAArB;AACnCC,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADsB;AAEnCM,MAAAA,eAFmC;AAGnCM,MAAAA,iBAHmC;AAInCG,MAAAA;AAJmC,KAA/B;AAAA,cAMHZ;AANG;AAAA;AAAA;AAAA;AAAA,UAAR;AAQH,CA/CM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState = {\n    transactions: [],\n    error: null\n}\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/transactions');\n\n\n            dispatch({\n                type: 'GETTransaction',\n                data: res.data.data\n            });\n        } catch (error) {\n            dispatch({\n                type: 'TransactionError',\n                data: error.response.data.error\n            });\n        }\n    }\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete('/transactions/' + id);\n        } catch (error) {\n            \n        }\n        dispatch({\n            type: 'delete',\n            data: id\n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'add',\n            data: transaction\n        });\n    }\n\n    return (<GlobalContext.Provider value={{transactions: state.transactions,\n        error: state.error,\n        getTransactions,\n        deleteTransaction, \n        addTransaction\n        }}>\n        {children}\n    </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}